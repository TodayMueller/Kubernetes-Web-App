apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-app
  labels:
    app: web-app
spec:
  replicas: 4 # Минимальное количество реплик для обеспечения пиковой нагрузки
  selector:
    matchLabels:
      app: web-app
  template:
    metadata:
      labels:
        app: web-app
    spec:
      containers:
      - name: web-app
        image: web-app:latest # Образ приложения, заменить на реальный
        resources:
          requests:
            cpu: "100m" # Минимальный запрос для плавного распределения
            memory: "128Mi"
          limits:
            cpu: "500m" # Увеличение ресурсов для первых запросов
            memory: "128Mi"
        readinessProbe: # Проба готовности для проверки инициализации
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5 # Учитываем время инициализации приложения
          periodSeconds: 5
        livenessProbe: # Проба живучести для перезапуска зависших контейнеров
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
      affinity: # Гарантируем распределение подов по зонам
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - web-app
              topologyKey: topology.kubernetes.io/zone
